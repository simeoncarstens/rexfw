'''
Slave classes responsible for distributing requests to replicas, proposers, ...
'''

from rexfw import Parcel

        
class Slave(object):

    def __init__(self, minions, comm):

        self.minions = minions
        self._comm = comm

    def _listen(self):

        while True:
            request = self._receive_request()
            if request.minion in self.minions.iterkeys():
                result = self.minions[request.minion].process_request(request)
                if type(result) == Parcel:
                    self._comm.send(result, dest=result.dest)
                elif result is None:
                    pass
                elif result == -1:
                    break
            else:
                raise ValueError("Minion '{}' not found.".format(request.minion))

    def listen(self):

        from threading import Thread

        self._thread = Thread(target=self._listen)
        self._thread.start()

    def _receive_request(self):

        return self._comm.recv(source=-1)
